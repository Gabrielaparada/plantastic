{"version":3,"sources":["Header.js","Instructions.js","data.js","firebase.js","DisplayingImages.js","Footer.js","App.js","serviceWorker.js","DisplayData.js","ScrollToTop.js","index.js"],"names":["Header","className","href","aria-hidden","Component","Intro","id","images","name","imageUrl","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DisplayImages","clickHandler","setState","showSorted","state","sortedImages","ratings","database","ref","on","result","plants","val","plantsRating","key","push","rating","sort","plant1","plant2","ratedPlant","map","plant","filter","image","mappedArray","this","index","rate","to","src","process","alt","length","Footer","App","Boolean","window","location","hostname","match","Plants","counterUp","selectedPlant","dbRef","once","results","set","document","body","scrollTop","parseInt","props","params","plantId","dataFirebase","light","water","moreInfo","repotting","role","aria-label","onClick","ScrollToTop","prevProps","pathname","scrollTo","React","withRouter","ReactDOM","render","StrictMode","basename","exact","path","component","AllPlants","DisplayData","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.97afbd64.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"landingPage\">\n        <div className=\"textContainer wrapper\">\n          <h1 className=\"title\">Plantastic</h1>\n          <p className=\"titleDesc\">\n            A guide that will help you take better care of your plants\n          </p>\n        </div>\n        <a href=\"#intro\">\n          <i aria-hidden=\"true\" className=\"fas fa-chevron-down\"></i>\n        <span className=\"sr-only\">Chevron pointing down to the next section of the page</span>\n        </a>\n      </header>\n    );\n  }\n\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\n\n\nclass Intro extends Component {\n\n\n  render() {\n    return (\n      <main className=\"intro\">\n        <div className=\"intro-inner wrapper\">\n          <h4 id=\"intro\" className=\"introTitle\">Struggling to keep your plants alive?</h4>\n          <h5 className=\"introSubHeading\">We can help!</h5>\n          <p className=\"introText\">\n            Plantastic is database built with love for all the plant lovers out\n            there. Whether you are a novice or a plant snob, this is for you. We've\n            compiled a list of some of the most popular house plants along with\n            good tips to keep your plant babies happy. Take a quick look through\n            our gallery. Once you find the plant you are interested in, click on\n            the image to get more deets.\n          </p>\n          <p className=\"introText last\">We are working on growing the list.</p>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Intro;","\nconst images = [\n  {\n    id: 6,\n    name: \"Bird of paradise\",\n    imageUrl: \"assets/birdOfParadise.jpg\",\n  },\n  {\n    id: 0,\n    name: \"Aloe vera\",\n    imageUrl: \"assets/aloe.jpg\",\n  },\n  {\n    id: 3,\n    name: \"Adansonii\",\n    imageUrl: \"assets/andasonii.jpg\",\n  },\n  {\n    id: 30,\n    name: \"String of turtles\",\n    imageUrl: \"assets/stringOfTurtles.jpg\",\n  },\n  {\n    id: 42,\n    name: \"Tillandsia\",\n    imageUrl: \"assets/largeTillandasia.jpg\",\n  },\n  {\n    id: 1,\n    name: \"African Mask\",\n    imageUrl: \"assets/africanMask.jpg\",\n  },\n  {\n    id: 4,\n    name: \"Angel wings begonia\",\n    imageUrl: \"assets/angelWingsBegonia.jpg\",\n  },\n  {\n    id: 43,\n    name: \"Bunny Ears Cactus\",\n    imageUrl: \"assets/bunnyEars.jpg\",\n  },\n  {\n    id: 9,\n    name: \"Dragon tree\",\n    imageUrl: \"assets/dragonTree.jpg\",\n  },\n  {\n    id: 5,\n    name: \"Asparagus Fern\",\n    imageUrl: \"assets/asparagusFern.jpg\",\n  },\n  {\n    id: 8,\n    name: \"Dracaena Fragrans\",\n    imageUrl: \"assets/cornPlant.jpg\",\n  },\n  {\n    id: 7,\n    name: \"Burros tail\",\n    imageUrl: \"assets/burrosTail.jpg\",\n  },\n  {\n    id: 10,\n    name: \"English Ivy\",\n    imageUrl: \"assets/englishIvy.jpg\",\n  },\n  {\n    id: 2,\n    name: \"African Violet\",\n    imageUrl: \"assets/africanViolets.jpg\",\n  },\n  {\n    id: 35,\n    name: \"String of pearls\",\n    imageUrl: \"assets/stringOfPearls.jpg\",\n  },\n  {\n    id: 11,\n    name: \"Boston fern\",\n    imageUrl: \"assets/fern.jpg\",\n  },\n  {\n    id: 12,\n    name: \"Fiddle Fig\",\n    imageUrl: \"assets/fiddleFig.jpg\",\n  },\n  {\n    id: 38,\n    name: \"Oxalis\",\n    imageUrl: \"assets/oxalis.jpg\",\n  },\n  {\n    id: 13,\n    name: \"Guiana Chestnut\",\n    imageUrl: \"assets/guianaChestnut.jpg\",\n  },\n  {\n    id: 39,\n    name: \"Echeverria\",\n    imageUrl: \"assets/echeverria.jpg\",\n  },\n  {\n    id: 14,\n    name: \"Hoya Carnosa\",\n    imageUrl: \"assets/hoyaCarnosa.jpg\",\n  },\n  {\n    id: 15,\n    name: \"Hoya Kerrii\",\n    imageUrl: \"assets/hoyaKerri.jpg\",\n  },\n  {\n    id: 31,\n    name: \"Variegated string of hearts\",\n    imageUrl: \"assets/variegatedStringOfHearts.jpg\",\n  },\n  {\n    id: 16,\n    name: \"Jade Plant\",\n    imageUrl: \"assets/jadePlant.jpg\",\n  },\n  {\n    id: 18,\n    name: \"Monster Deliciosa\",\n    imageUrl: \"assets/monsteraDeliciosa.jpg\",\n  },\n  {\n    id: 19,\n    name: \"Phalaenopsis Orchid\",\n    imageUrl: \"assets/orchid.jpg\",\n  },\n  {\n    id: 20,\n    name: \"Watermelon Peperomia\",\n    imageUrl: \"assets/peperomia2.jpg\",\n  },\n  {\n    id: 21,\n    name: \"Pothos\",\n    imageUrl: \"assets/pothos.jpg\",\n  },\n  {\n    id: 40,\n    name: \"Hens and chicks\",\n    imageUrl: \"assets/hen.jpg\",\n  },\n  {\n    id: 23,\n    name: \"Pink prayer plant\",\n    imageUrl: \"assets/pinkPrayerPlant.jpg\",\n  },\n  {\n    id: 24,\n    name: \"Ponytail Palm\",\n    imageUrl: \"assets/ponytail.jpg\",\n  },\n  {\n    id: 22,\n    name: \"Pilea\",\n    imageUrl: \"assets/pilea.jpg\",\n  },\n  {\n    id: 25,\n    name: \"Rattlesnake\",\n    imageUrl: \"assets/rattlesnake.jpg\",\n  },\n  {\n    id: 26,\n    name: \"Rubber plant\",\n    imageUrl: \"assets/rubberPlant.jpg\",\n  },\n  {\n    id: 27,\n    name: \"Snake plant\",\n    imageUrl: \"assets/snakePlant.jpg\",\n  },\n  {\n    id: 17,\n    name: \"Lucky Bamboo\",\n    imageUrl: \"assets/luckyBamboo.jpg\",\n  },\n  {\n    id: 28,\n    name: \"Spider plant\",\n    imageUrl: \"assets/spiderPlant.jpg\",\n  },\n  {\n    id: 29,\n    name: \"String of hearts\",\n    imageUrl: \"assets/stringOfHearts.jpg\",\n  },\n  {\n    id: 32,\n    name: \"Tradescantia Zebrina\",\n    imageUrl: \"assets/wanderingDude.jpg\",\n  },\n  {\n    id: 33,\n    name: \"Yucca\",\n    imageUrl: \"assets/yucca.jpg\",\n  },\n  {\n    id: 34,\n    name: \"Zz plant\",\n    imageUrl: \"assets/zzPlant.jpg\",\n  },\n  {\n    id: 36,\n    name: \"African Milk Tree\",\n    imageUrl: \"assets/milkTree.jpg\",\n  },\n  {\n    id: 37,\n    name: \"Caladium\",\n    imageUrl: \"assets/calladium.jpg\",\n  },\n  {\n    id: 41,\n    name: \"Zebra plant\",\n    imageUrl: \"assets/zebra.jpg\",\n  },\n];\n\n\nexport default images;","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyApwrElXELr7FjhASUXLwmViqWHSYCujPQ\",\n  authDomain: \"plant-guide-71002.firebaseapp.com\",\n  databaseURL: \"https://plant-guide-71002.firebaseio.com\",\n  projectId: \"plant-guide-71002\",\n  storageBucket: \"plant-guide-71002.appspot.com\",\n  messagingSenderId: \"87265471429\",\n  appId: \"1:87265471429:web:31f6ccc7bd9e0cc14739ac\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n\nexport default firebase;","import React,{ Component } from 'react';\nimport images from './data'\nimport {Link} from 'react-router-dom'\nimport firebase from \"./firebase\";\n\nclass DisplayImages extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      images : [],\n      sortedImages: [],\n      showSorted: false,\n      ratings: []\n    };\n  }\n\n  componentDidMount() {\n    //getting data from firebase to sort images by rating\n    const dbRef = firebase.database().ref();\n    dbRef.on(\"value\", (result) => {\n      const plants = result.val();\n      const plantsRating = [];\n      for (let key in plants) {\n        plantsRating.push({\n            rating :plants[key].rating, \n            id: plants[key].id\n          });\n          this.setState({\n            ratings: plantsRating\n          });\n      }\n      //create an array with plant id sorted by rating  \n      plantsRating.sort((plant1, plant2)=>{\n        return plant2.rating - plant1.rating\n      })\n\n      //loop through plantsRating array and get id\n      const ratedPlant = plantsRating.map((plant)=>{\n\n      //filter through array and return images and matched id\n      const foundImage = images.filter((image)=>{\n          return image.id === plant.id\n        })\n        return foundImage[0]\n      })\n      //set array to state\n      this.setState({\n        sortedImages: ratedPlant\n      })\n      \n    });\n  }\n\n//toggle function\n  clickHandler = () => {\n    this.setState({\n      showSorted: true\n    });\n  }\n\n\n  render() {\n    const mappedArray = this.state.showSorted ? this.state.sortedImages : images;\n      return (\n        <section className=\"galleryContainer\">\n          <h2 className=\"plantGallery\">Plant Gallery</h2>\n          {/* <div className=\"galleryButton\">\n            <button className=\"sortingButton\" onClick={this.clickHandler}>\n              Click here to sort gallery by rating\n            </button>\n          </div> */}\n          <p className=\"galleryText\">\n            Remember each plant is a unique living thing and may have varying\n            needs, especially in their individual&nbsp;locations.\n          </p>\n\n          <div className=\"images\">\n            {/*map through images array*/}\n            {mappedArray.map((image, index) => {\n                const rate = this.state.ratings.filter((rate)=>{\n                return rate.id === image.id\n              })\n              return (\n                //route to plant content.\n                <Link className=\"anchor\" key={index} to={`/plant/${image.id}`}>\n                  <p className=\"plantName\">{image.name}</p>\n                  <img\n                    className=\"plantImage\"\n                    id={image.id}\n                    src={`${process.env.PUBLIC_URL}/${image.imageUrl}`}\n                    alt={image.name}\n                  />\n                  <div className=\"plantLikes\">\n                    <p className=\"likesNumber\">\n                    {!!rate.length ? <p>Likes:{rate[0].rating}</p> : ''}\n                    </p>\n                  </div>\n                </Link>\n              );\n            })}\n          </div>\n        </section>\n      );\n    }\n  }\n\n\nexport default DisplayImages;\n\n","import React, { Component } from 'react';\n\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p className=\"footer\">\n          <i aria-hidden=\"true\" className=\"far fa-copyright\"></i>\n          <span className=\"sr-only\">Copyright</span>\n          Gabriela Parada 2020<br/>\n          <span className=\"credits\">All images belong to their respective owners</span>\n        </p>\n      </footer>\n    );\n  } \n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Header from './Header'\nimport Intro from './Instructions'\nimport DisplayImages from './DisplayingImages'\nimport './App.css';\nimport Footer from './Footer'\n\n\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Intro />\n        <DisplayImages />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component} from 'react';\nimport firebase from './firebase'\n\nclass Plants extends Component {\n  constructor(){\n    super()\n    this.state={\n      plants: [],\n      selectedPlant: {},\n    }\n  }\n\n  componentDidMount(){\n    document.body.scrollTop = 0;\n    //get id from props matching the images\n    const id = parseInt(this.props.match.params.plantId)\n  \n    //get plant that matches user input from firebase\n    const dbRef = firebase.database().ref(`/${id}`)\n    dbRef.on('value', (result)=>{\n    const dataFirebase = result.val();\n    const selectedPlant = {\n        light: dataFirebase.light,\n        water: dataFirebase.water,\n        moreInfo: dataFirebase.moreInfo,\n        repotting: dataFirebase.repotting,\n        name: dataFirebase.name,\n        id: dataFirebase.id,\n        rating: dataFirebase.rating\n      }\n    this.setState({\n      selectedPlant: selectedPlant\n    })\n    })\n    }\n\n  //counter up function for likes displayed on plant's info page.\n  counterUp = () => {\n    const id = this.state.selectedPlant.id;\n    const dbRef = firebase.database().ref(`/${id}/rating`);\n    dbRef.once('value', (result)=> {\n      const results = result.val()\n      dbRef.set(results + 1)\n    })    \n  }\n\n  render(){\n    return (\n      <section className=\"plantInfoContainer\">\n        <h1 className=\"plantTitle\">{this.state.selectedPlant.name}</h1>\n\n        <div className=\"iconContainer\">\n          <img\n            className=\"icons\"\n            src=\"../assets/water.png\"\n            alt=\"Water schedule\"\n            />\n            <p className=\"information\">Watering: {this.state.selectedPlant.water}</p>\n        </div>\n\n        <div className=\"breakLine\"></div>\n\n        <div className=\"iconContainer\">\n          <img className=\"icons\" src=\"../assets/sun.png\" alt=\"Sunlight\" />\n          <p className=\"information\">Sunlight: {this.state.selectedPlant.light}</p>\n        </div>\n\n        <div className=\"breakLine\"></div>\n\n        <div className=\"iconContainer\">\n          <img\n            className=\"icons\"\n            src=\"../assets/repot.png\"\n            alt=\"Repotting tips\"\n          />\n          <p className=\"information\">Repotting: {this.state.selectedPlant.repotting}</p>\n        </div>\n\n        <div className=\"breakLine\"></div>\n\n        <div className=\"iconContainer\">\n          <img\n            className=\"icons\"\n            src=\"../assets/moredeets.png\"\n            alt=\"Extra details\"\n          />\n          <p className=\"information\">Extra deets: {this.state.selectedPlant.moreInfo}</p>\n        </div>\n\n        <div className=\"breakLine\"></div>\n\n        <div>\n          <p className=\"like\">\n            If you enjoyed this, give it a <span role=\"img\" aria-label=\"Heart Icon\">♥️</span>\n          </p>\n          <div className=\"likesContainer\">\n            <button className=\"likeButton\" onClick={this.counterUp}>\n              <i className=\"fas fa-heart\"></i>\n            </button>\n            <p className=\"likesNumber\">\n              Likes:{this.state.selectedPlant.rating}\n            </p>\n          </div>\n          <p className=\"iconsCred\">Icons by IYIKON, Noun Project</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Plants;\n\n\n\n\n\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(1,0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AllPlants from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport DisplayData from './DisplayData'\nimport ScrollToTop from './ScrollToTop'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" component={AllPlants} />\n      <ScrollToTop />\n      <Route exact path=\"/plant/:plantId\" component={DisplayData} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}